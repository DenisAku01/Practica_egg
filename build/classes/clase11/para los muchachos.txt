/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VectoresYmatrizes;

/**
 *
 * @author Sohai
 */
import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author Martin Arana
 */
public class Ejercicio {

    Scanner leer = new Scanner(System.in);

    public void ejercicio1() {

         int arreglo [] = new int [100];
        //Arrays.sort(arreglo);
        
        for (int i=0; i < arreglo.length; i++) {
            arreglo[i] = i+1;
            }
            
        for (int i=arreglo.length-1; i>=0 ; i--) {
            System.out.println(""+  arreglo[i]);
        }   
   
        
    
}


    public void ejercicio2() {
      
        System.out.println("Ingrese el tamaño del vector");
        int n = leer.nextInt();
        int[] vector = new int[n];
        for (int i = 0; i < vector.length; i++) {
            vector[i] = (int) (Math.random()* 9 + 1);// Para que no salga el numero 0 como aleatorio, se ingresa "9+1;
            System.out.println(vector[i]);
        }
        System.out.println("Ingrese un numero para buscar");
        
        int buscar;
        int aux = 0;
        buscar = leer.nextInt();
        for (int i = 0; i < vector.length; i++) {
            if(vector[i] == buscar){ // (condicion) si la posicion es igual al numero ingresado
                aux++;
                System.out.println("El numero se encontró en la posicion: " + (i+1));
            }
        }
        System.out.println("Encontro el numero = "+ buscar + " se encontró " + aux + " Veces");
    }

    public void ejercicio3() {
        System.out.println("ingrese tamaño del vector");
        int n = leer.nextInt();
        int cantidad = 0;
        int[] vector = new int[n];

        int dig1 = 0;
        int dig2 = 0;
        int dig3 = 0;
        int dig4 = 0;
        int dig5 = 0;

        for (int i = 0; i <= n - 1; i++) {
            vector[i] = (int) (Math.random() * 15000);
        }

        for (int i = 0; i <= n; i++) {
            String cadena = String.valueOf(vector[i]);

            cantidad = cadena.length();

            switch (cantidad) {
                case 1:
                    dig1++;
                    break;
                case 2:
                    dig2++;
                    break;
                case 3:
                    dig3++;
                    break;
                case 4:
                    dig4++;
                    break;
                case 5:
                    dig5++;
                    break;

            }
        }

        System.out.println("La cantidad de 1 digitos son de " + dig1);
        System.out.println("La cantidad de 2 digitos son de " + dig2);
        System.out.println("La cantidad de 3 digitos son de " + dig3);
        System.out.println("La cantidad de 4 digitos son de " + dig4);
        System.out.println("La cantidad de 5 digitos son de " + dig5);
        /*System.out.println("Ingrese el tamaño del array");
        int n = leer.nextInt();

        int[] arreglo = new int[n];

        for (int i = 0; i < arreglo.length; i++) {
            arreglo[i] = (int) (Math.random() * (Math.pow(10, (Math.random() * 10) / 2)));
        }
        
        
        for (int i = 0; i < arreglo.length; i++) {
            System.out.println("[" + arreglo[i] + "]" + i + " ");
        }

        System.out.println("");
        
        int d1, d2, d3, d4, d5; d1 =0; d2 =0; d3 =0; d4 =0; d5 =0;

        for (int i = 0; i < arreglo.length; i++) {
            int digitos = contarDigitos(arreglo[i]);
            switch(digitos){
                case 1:
                    d1++;
                    break;
                case 2:
                    d2++;
                    break;
                case 3:
                    d3++;
                    break;
                case 4:
                    d4++;
                    break;
                case 5:
                    d5++;
                    break; 
            }
        }
        
        System.out.println("1 digito:"+d1);
        System.out.println("2 digitos:"+d2);
        System.out.println("3 digitos:"+d3);
        System.out.println("4 digitos:"+d4);
        System.out.println("5 digitos:"+d5);

    }

    public static int contarDigitos(int num) {
        int cont = 0;
        do {
            num = num / 10;
            cont++;
        } while (num != 0);

        return cont;
    }*/

    }

    public void ejercicio4() {

        int[][] matriz = new int[4][4];

        // Asigno valores mediante el For
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                matriz[i][j] = (int) (Math.random() * 10);
            }
        }

        // Muestro la matriz
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("[" + matriz[i][j] + "]");
            }
            System.out.println("");
        }

        System.out.println("-------------------");

        for (int j = 0; j < 3; j++) {
            for (int i = 0; i < 3; i++) {
                System.out.print("[" + matriz[i][j] + "]");
            }
            System.out.println("");
        }

    }

    public void ejercicio5() {
        int n;
        System.out.print("Ingrese el tamaño de la matriz: ");
        n = leer.nextInt();
        int[][] matriz = new int[n][n];
        System.out.println("Ingrese los elementos de la matriz:");
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                matriz[i][j] = leer.nextInt();
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.print(matriz[i][j]);
            }
            System.out.println("");
        }

        if (esAntisimetrica(matriz)) {
            System.out.println("La matriz es antisimétrica.");
        } else {
            System.out.println("La matriz no es antisimétrica.");
        }

        leer.close();
    }

    public boolean esAntisimetrica(int[][] matriz) {
        int n = matriz.length;
        boolean esAntisimetrica = false;
        int cont = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (matriz[i][j] + matriz[j][i] == 0) {
                    cont++;
                }
            }
        }
        System.out.println(cont);

        if (cont == 9) {
            esAntisimetrica = true;
        }
        return esAntisimetrica;
    }

    public void ejercicio6() {
        int[][] matriz = new int[3][3];

        for (int[] matriz1 : matriz) {
            for (int j = 0; j < matriz.length; j++) {
                matriz1[j] = (int) (Math.random() * 9);
            }
        }
        int colm0 = 0;
        int colm1 = 0;
        int colm2 = 0;
        int fil0 = 0;
        int fil1 = 0;
        int fil2 = 0;
        int diag1 = 0;
        int diag2 = 0;
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
                if (i == 0) {
                    fil0 = fil0 + matriz[i][j];
                }
                if (i == 1) {
                    fil1 = fil1 + matriz[i][j];
                }
                if (i == 2) {
                    fil2 = fil2 + matriz[i][j];
                }
                if (j == 0) {
                    colm0 = colm0 + matriz[i][j];
                }
                if (j == 1) {
                    colm1 = colm1 + matriz[i][j];
                }
                if (j == 2) {
                    colm2 = colm2 + matriz[i][j];
                }
                if ((i == 0 && j == 0) || (i == 1 && j == 1) || (i == 2 && j == 2)) {
                    diag1 = diag1 + matriz[i][j];
                }
                if ((i == 0 && j == 2) || (i == 1 && j == 1) || (i == 2 && j == 0)) {
                    diag2 = diag2 + matriz[i][j];
                }
            }
        }
        int totalFil = 0;
        int totalColum = 0;
        int totalDiag = 0;

        if (fil0 == fil1 && fil0 == fil2) {
            totalFil = fil0 + fil1 + fil2;
        } else {
            totalFil = 1;
        }
        if (colm0 == colm1 && colm0 == colm2) {
            totalColum = colm0 + colm1 + colm2;
        }
        if (diag1 == diag2) {
            totalDiag = diag1 + diag2;
        }
        /*System.out.println(totalDiag);
        System.out.println(totalColum);
        System.out.println(totalFil);
         */
        if (totalFil == totalColum && totalFil == totalDiag) {
            System.out.println("es magica");
        } else {
            System.out.println("no es magica");
        }

        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
                System.out.print(matriz[i][j] + " ");
            }
            System.out.println("");
        }
        /*  System.out.println(colm0 +" columna 0");
              System.out.println(colm1 +" columna 1");
              System.out.println(colm2 +" columna 2");
              System.out.println(fil0 +" fila 0");
               System.out.println(fil1 +" fila 1");
                System.out.println(fil2 +" fila 2");
                System.out.println(diag1 +" diagonal 1");
                System.out.println(diag2 +" diagonal 2");
         */

        // otra fomra de acerlo 
        /* 
            
            
            
    
            for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                matriz[i][j] = leer.nextInt();
            }
        }
       
        for (int i = 0; i < 3; i++) {
                    diagonalPrincipal = matriz[i][i] + diagonalPrincipal;
                    System.out.println(matriz[i][(3-1)-i]);
                    diagonalSecundaria = matriz[i][(3-1)-i] + diagonalSecundaria;
                }
        
        comparar = diagonalPrincipal == diagonalSecundaria;
        
        System.out.println("comparar es "+comparar);
        
        for (int i = 0; i < 3; i++) {
            sumadorFila += matriz[i][contador];
            sumadorColumna += matriz[contador][i];
            contador++;
            
        }
        
        comparar = sumadorFila == sumadorColumna && sumadorFila == diagonalPrincipal;
        System.out.println("comparar es "+comparar);        
        System.out.println(diagonalPrincipal);
        System.out.println(diagonalSecundaria);
        
        System.out.println("sumadorfila " +sumadorFila);
        System.out.println("sumadorcolumna " +sumadorColumna);
        }
            
            
            
         */
    }

    public void ejercicio1ex() {
        /*Realizar un algoritmo que calcule la suma de todos los elementos de un vector de tamaño N,
                 con los valores ingresados por el usuario.*/

        System.out.println("ingrese el largo del vector");
        int n = leer.nextInt();
        int[] vector = new int[n];
        int suma = 0;
        for (int i = 0; i < vector.length; i++) {
            System.out.println("ingrese el valor del vector");
            vector[i] = leer.nextInt();
            suma = suma + vector[i];
        }
        System.out.println(suma);
    }

    public void ejercicio2ex() {
        /*Escriba un programa que averigüe si dos vectores de N enteros
               son iguales (la comparación deberá detenerse en cuanto se detecte
               alguna diferencia entre los elementos).*/
        System.out.println("ingrese largo de los vectores");
        int n = leer.nextInt();
        int[] vector1 = new int[n];
        int[] vector2 = new int[n];
        boolean esIgual = true;

        for (int i = 0; i < vector1.length; i++) {
            System.out.println("ingrese el valor del vector 1");
            vector1[i] = leer.nextInt();
            System.out.println("ingrese el valor del vector 2");
            vector2[i] = leer.nextInt();

            if (vector1[i] != vector2[i]) {
                esIgual = false;
                break;
            }
        }
        if (esIgual == true) {
            System.out.println("todos los valores son iguales");
        } else {
            System.out.println("los valores son diferentes");
        }

    }

    public void ejercicio3ex() {
        /*Crear una función rellene un vector con números aleatorio,
                  pasándole un arreglo por parámetro. Después haremos otra función o
                  procedimiento que imprima el vector.            
         */
        System.out.println("ingrese tamaño del vector");
        int n = leer.nextInt();
        int[] vector = new int[n];

        for (int i = 0; i < vector.length; i++) {
            vector[i] = (int) (Math.random() * 10);
            //System.out.println(vector[i]+"a");

        }
        imprimir(vector);

    }

    public static void imprimir(int[] vector) {

        for (int i = 0; i < vector.length; i++) {
            System.out.print(vector[i] + " ");
        }
        System.out.println("");
    }

    public void ejercicio4ex() {
        /*     los profesores del curso de programación de Egg necesitan llevar un registro de las notas adquiridas por sus 10 
          alumnos para luego obtener una cantidad de aprobados y desaprobados. Durante el período de cursado cada alumno obtiene 4 notas,
          2 por trabajos prácticos evaluativos y 2 por parciales. Las ponderaciones de cada nota son:
Primer trabajo práctico evaluativo 10%
Segundo trabajo práctico evaluativo 15%
Primer Integrador 25%
Segundo integrador 50%
Una vez cargadas las notas, se calcula el promedio y se guarda en el arreglo.
          Al final del programa los profesores necesitan obtener por pantalla la cantidad de aprobados y desaprobados,
          teniendo en cuenta que solo aprueban los alumnos con promedio mayor o igual al 7 de sus notas del curso
         */
        System.out.println("ingrese cantidad de alumnos");
        int n = leer.nextInt();
        double[][] notas = new double[n][4];
        int aprobados = 0;
        int desaprobados = 0;
        for (int i = 0; i < n; i++) {
            System.out.println("notas del alumno " + (i + 1) + ":");

            notas[i][0] = (int) (Math.random() * 10);
            System.out.println(notas[i][0]);

            notas[i][1] = (int) (Math.random() * 10);
            System.out.println(notas[i][1]);

            notas[i][2] = (int) (Math.random() * 10);
            System.out.println(notas[i][2]);

            notas[i][3] = (int) (Math.random() * 10);
            System.out.println(notas[i][3]);
        }

        for (int i = 0; i < n; i++) {
            double promedios = notas[i][0] * 0.1 + notas[i][1] * 0.15 + notas[i][2] * 0.25 + notas[i][3] * 0.50;
            System.out.println("promedio " + promedios);
            if (promedios >= 7) {
                aprobados++;
            } else {
                desaprobados++;
            }
        }
        System.out.println("aprobados " + aprobados);
        System.out.println("desaprobados " + desaprobados);

        //FORMA ALTERNATIVA
        /*
                System.out.println("Ingrese Nombre del Alumno");
        
        
    int a = 10, n = 4, cont = 0;
    double []notafinal=new double[10];
    String[]alumnos=new String[10];
    int[][] matriz = new int[a][n];
    for (int i = 0; i <10;i++){
       alumnos[i]=leer.next();
    }
       System.out.println("Matriz Generada :");
        for (int i = 0; i < a; i++) {
            
            System.out.println("Ingrese los nombres de los Alumnos : ");
            
            System.out.println("|ALUMNO|-----NOTAS-----|-----PROMEDIO-------|");
            System.out.print("|"+(alumnos[i])+"|");
            for (int j = 0; j < n; j++) {
             matriz[i][j] = (int) (Math.random()*10+1);
                cont  += matriz[i][j];
                System.out.print("");
                System.out.print(" "+matriz[i][j]+" ");
               
                System.out.print("|");
             
            notafinal[i]=(matriz[i][0])*0.10+(matriz[i][1])*0.15+(matriz[i][2])*0.25+(matriz[i][3])*0.50;
            
               
             }
            
              System.out.println("Gral:"+(double)(cont/4)+" || Real:"+(notafinal[i]));
              
              cont=0;
             System.out.println(" ");
         }
       /*System.out.println("La suma de los números de la matriz es : "+cont);
        
         */
    }

    public void ejercicio5ex() {
        /* 
            Realizar un programa que llene una matriz de tamaño NxM con 
            valores aleatorios y muestre la suma de sus elementos.
         */

        System.out.println("ingrese el largo del vector");
        int n = leer.nextInt();
         System.out.println("ingrese el ancho del vector");
        int m = leer.nextInt();
        int[][] vector = new int[n][m];
        int suma = 0;

        for (int i = 0; i < vector.length; i++) {
            for (int j = 0; j < vector.length; j++) {
                System.out.println("ingrese el valor del vector");
                vector[i][j] = leer.nextInt();
                suma = suma + vector[i][j];
            }
        }
        System.out.println(suma);

        /*
        Scanner leer = new Scanner(System.in);

        System.out.println("Ingrese Tamaño Vector (FxC)");
    int f = leer.nextInt();
    int c = leer.nextInt();
    int cont = 0;
    int[][] matriz = new int[f][c];
       System.out.println("Matriz Generada :");
        for (int i = 0; i < f; i++) {
            for (int j = 0; j < c; j++) {
             matriz[i][j] = (int) (Math.random()*10);
                cont  += matriz[i][j];
                System.out.print(" "+matriz[i][j]+" ");
               
             }
            
             System.out.println(" ");
         }
       System.out.println("La suma de los números de la matriz es : "+cont);
         */
    }
    
      public void ejercicio6ex() {
        /*Construya un programa que lea 5 palabras de mínimo 3 y hasta 5 caracteres y,
          a medida que el usuario las va ingresando, construya una “sopa de letras
          para niños” de tamaño de 20 x 20 caracteres. Las palabras se ubicarán todas
          en orden horizontal en una fila que será seleccionada de manera aleatoria. Una vez concluida la ubicación de las palabras,
          rellene los espacios no utilizados con un número aleatorio del 0 al 9. Finalmente imprima por pantalla la sopa de letras creada.          
         */
        
        // Definir las palabras que se utilizarán en la sopa de letras
        Scanner scanner = new Scanner(System.in);
        String[] palabras = new String[5];
        for (int i = 0; i < palabras.length; i++) {
            String palabra = "";
            while (palabra.length() < 3 || palabra.length() > 5) {
                System.out.print("Ingrese una palabra de 3 a 5 caracteres: ");
                palabra = scanner.nextLine();
            }
            palabras[i] = palabra;
        }
        
        // Definir el tamaño de la sopa de letras
        int tamanio = 20;
        
        // Seleccionar la fila aleatoria en la que se ubicarán las palabras
        Random random = new Random();
        int fila = random.nextInt(tamanio);
        
        // Crear la matriz que representará la sopa de letras
        char[][] sopa = new char[tamanio][tamanio];
        for (int i = 0; i < tamanio; i++) {
            for (int j = 0; j < tamanio; j++) {
                sopa[i][j] = (char)(random.nextInt(10) + '0'); // generar número aleatorio del 0 al 9 como char
            }
        }
        
        // Ubicar las palabras en la fila seleccionada
        int x = random.nextInt(tamanio - palabras[0].length() + 1);
        for (int i = 0; i < palabras[0].length(); i++) {
            sopa[fila][x + i] = palabras[0].charAt(i);
        }
        
        // Rellenar los espacios vacíos con números aleatorios
        for (int i = 0; i < tamanio; i++) {
            for (int j = 0; j < tamanio; j++) {
                if (sopa[i][j] == '\u0000') { // verificar si el elemento es nulo
                    sopa[i][j] = (char)(random.nextInt(10) + '0');
                }
            }
        }
        
        // Imprimir la sopa de letras
        for (int i = 0; i < tamanio; i++) {
            for (int j = 0; j < tamanio; j++) {
                System.out.print(sopa[i][j] + " ");
            }
            System.out.println();
        }
        
        scanner.close();
    }
      
       public void ejercicio7ex() {
        /* 
            Realizar un programa que complete un vector con los N primeros números
           de la sucesión de Fibonacci. Recordar que la sucesión de Fibonacci es la
           sucesión de los siguientes números:
         */

        System.out.println("ingrese el largo del vector");
        int n = leer.nextInt();
        int[] vector = new int[n];
        

        for (int i = 0; i < vector.length; i++) {
             if(i==0 || i==1){
             vector[i]=1;
             }else{           
             vector[i]= vector[i-1]+vector[i-2];
             }                      
        }
           for (int i = 0; i < vector.length; i++) {
            System.out.print(vector[i] + " ");
        }
        System.out.println("");
        

   
    }

}
